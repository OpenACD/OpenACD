#! /usr/bin/env bash

function do_included_apps {
	initDir=`pwd`
	for file in include_apps/*
	do
		echo "das file:  $file"
		cd $file
		../../rebar $1
		cd $initDir
	done
}

function post_compile {
	do_included_apps "compile"
}

function pre_compile {
	if [ ! -d ebin ]; then
		mkdir ebin
	fi
	
	for file in proto_src/*.proto
	do
		nameBase=`echo "$file" | sed -e "s/^proto_src\///"`
		nameBase="src/${nameBase}"
		if [ ! -e $nameBase -o $file -nt $nameBase ]
		then
			cp $file src/
		fi
	done
	
	# record what commit/version openacd is at
	OPENACD_COMMIT=""
	if [ -d ".git" ]
	then
		OPENACD_COMMIT=`git log -1 --pretty=format:%H`
	fi
	if [ -e "include/commit_ver.hrl" ] && [ ! $OPENACD_COMMIT ]
	then
	 exit 0
	else
		if [ ! $OPENACD_COMMIT ]
		then
			OPENACD_COMMIT="undefined"
		else
			OPENACD_COMMIT="\"$OPENACD_COMMIT\""
		fi
	fi
	echo "%% automatically generated by OpenACD precompile script.  Editing means
%% it will just get overwritten again.
	
-define(OPENACD_COMMIT, $OPENACD_COMMIT)." > include/commit_ver.hrl
}

function pre_get-deps {
	if [ "${GIT_UPDATE_DISABLED}" != "1" ]; then
		echo "Updating submodules..."
		git submodule init && git submodule update
	fi

	if [ ! -d ../oacd_freeswitch ]; then
		if [ ! -d ../oacd_dummy ]; then
			cp -R include_apps/ ../
		fi
	fi
	
	if [ ! -d ../../proto_src ]; then
		mkdir ../../proto_src
	fi
	
	cp proto_src/*.proto ../../proto_src
}

function post_get-deps {
	do_included_apps "get-deps"
}

function pre_clean {
	rm -rf "OpenACD"
}

function post_clean {
	do_included_apps clean
}

case $1 in
	"pre_get-deps")
		pre_get-deps;;
	"post_get-deps")
		post_get-deps;;
	"pre_compile")
		pre_compile;;
	"post_compile")
		post_compile;;
	"pre_clean")
		pre_clean;;
	"post_clean")
		post_clean;;
esac
